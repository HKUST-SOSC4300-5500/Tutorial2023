library("quanteda")
library("stm")
gadarian <- gadarian
View(gadarian)
data <- corpus(gadarian, text_field = 'open.ended.response')
summary(data)
docvars(data)
docvars(data)$text <- as.character(data) # make text part of the metadata
docvars(data)$treated <- ifelse(gadarian$treatment == 1, "treated", "control")
docvars(data)$party = ifelse(data$pid_rep == 0.5, "neutral", ifelse(data$pid_rep < 0.5, "Rep", "Dem"))
docvars(data)
?dfm_trim
data_dfm <- dfm(data, stem = TRUE, remove = stopwords('english'),
remove_punct = TRUE) %>% dfm_trim(min_count = 2)
View(data_dfm)
out <- convert(data_dfm, to = 'stm')
View(out)
?stm
gadarian_3_lda <- stm(documents = out$documents,
vocab = out$vocab,
K = 3)
labelTopics(gadarian_3_lda,  n = 20)
plot(gadarian_3_lda)
gadarian_3 <- stm(documents = out$documents,
vocab = out$vocab,
data = out$meta,
prevalence = ~ pid_rep ,
K = 3, verbose = FALSE)
## explicity estimate effect of covariates on topic proportions
prep_3 <- estimateEffect(1:3 ~ pid_rep, gadarian_3,
meta = out$meta)
summary(prep_3)
labelTopics(gadarian_3, n = 10)
# plot differences between treatment/control
plot(prep_3, covariate = "pid_rep",  model = gadarian_3, method =  "continuous")
## oly
prep_topic1only <- estimateEffect(c(1) ~ treated * pid_rep, gadarian_3,
meta = out$meta)
summary(prep_topic1only)
plot(prep_topic1only, covariate = "pid_rep",  model = gadarian_3, method =  "continuous", moderator = "treated", moderator.value = "treated",  linecol = "blue",printlegend = F, ylim = c(0, .5))
plot(prep_topic1only, covariate = "pid_rep",  model = gadarian_3, method =  "continuous", moderator = "treated", moderator.value = "control",  linecol = "red",printlegend = F, add = T, ylim = c(0,.5))
legend(0.3, 0.2, c("Treated", "Control"), lwd = 2, col = c("blue", "red"))
gadarian_3 <- stm(documents = out$documents,
vocab = out$vocab,
data = out$meta,
content = ~ treated ,
K = 3, verbose = FALSE)
## explicity estimate effect of covariates on topic proportions
prep_3 <- estimateEffect(1:3 ~ treated, gadarian_3,
meta = out$meta)
summary(prep_3)
plot(gadarian_3, type = "perspectives", topics = 3, width = 20, text.cex = 3)
